# Phase I - Builder source
FROM python:3.7 as builder
# PYTHONUNBUFFERED Force logging to stdout / stderr not to be buffered into ram  
ENV PYTHONUNBUFFERED=1 
WORKDIR /usr/src/app
COPY application/ ./
WORKDIR /wheels
COPY application/requirements.txt .
# PIP Will create an archive of our libraries so we don't need to download them again
# argument - wheel
RUN pip wheel -r ./requirements.txt 

# Lints Code
# Phase II
FROM eeacms/pylint:latest as linting
WORKDIR /code
COPY --from=builder /usr/src/app/pylint.cfg /etc/pylint.cfg
COPY --from=builder /usr/src/app/*.py ./

RUN ["/docker-entrypoint.sh", "pylint"]

# Phase III Running Sonarqube scanner (Sonarqube server also required)
FROM newtmitch/sonar-scanner as sonarqube
WORKDIR /usr/src
COPY --from=builder /usr/src/app/*.py ./
RUN sonar-scanner -Dsonar.projectBaseDir=/usr/src

# Starts and Serves Web Page
# Phase VI
FROM python:3.7-alpine3.9 as serve
WORKDIR /usr/src/app
# Copy all packages instead of rerunning pip install
COPY --from=builder /wheels /wheels
RUN     pip install -r /wheels/requirements.txt \
                      -f /wheels \
       && rm -rf /wheels \
       && rm -rf /root/.cache/pip/* 

COPY --from=builder /usr/src/app/*.py ./
COPY --from=builder /usr/src/app/api ./api
CMD ["python", "run_app.py"]